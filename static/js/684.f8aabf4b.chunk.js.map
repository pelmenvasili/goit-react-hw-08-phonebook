{"version":3,"file":"static/js/684.f8aabf4b.chunk.js","mappings":"mQAMe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoDC,EAAAA,EAAAA,WAAS,GAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAWD,OAAIV,GACK,SAAC,KAAD,CAAUW,GAAG,YAAYC,SAAO,KAIvC,iBAAKC,UAAWC,EAAAA,EAAAA,UAAhB,WACE,+CAEA,kBAAMC,SAjBW,SAAAC,GACnBA,EAAEC,iBACFpB,EAASqB,EAAAA,EAAAA,SAAoB,CAAEhB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAC5CL,GAAsB,GACtBE,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAUiCY,aAAa,MAAMN,UAAWC,EAAAA,EAAAA,KAA5D,WACE,qCAEE,kBAAOM,KAAK,OAAOlB,KAAK,OAAOQ,MAAOR,EAAMmB,SAAUb,EAAcK,UAAWC,EAAAA,EAAAA,YAGjF,sCAEE,kBACEM,KAAK,QACLlB,KAAK,QACLQ,MAAON,EACPiB,SAAUb,EACVK,UAAWC,EAAAA,EAAAA,YAIf,yCAEE,kBACEM,KAAK,WACLlB,KAAK,WACLQ,MAAOJ,EACPe,SAAUb,EACVK,UAAWC,EAAAA,EAAAA,YAIf,mBAAQM,KAAK,SAASP,UAAWC,EAAAA,EAAAA,OAAjC,2BAIP,C,qBC1ED,KAAgB,UAAY,6BAA6B,MAAQ,yBAAyB,OAAS,0B","sources":["views/RegisterView.js","webpack://goit-react-hw-08-phonebook/./src/views/LoginView.module.css?dd24"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from '../redux/auth/auth-operations';\nimport css from './LoginView.module.css';\nimport { Navigate } from 'react-router-dom';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [redirectToContacts, setRedirectToContacts] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(operations.register({ name, email, password }));\n    setRedirectToContacts(true);\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  if (redirectToContacts) {\n    return <Navigate to=\"/contacts\" replace />;\n  }\n\n  return (\n    <div className={css.container}>\n      <h1>Registration page</h1>\n\n      <form onSubmit={handleSubmit} autoComplete=\"off\" className={css.form}>\n        <label>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} className={css.input} />\n        </label>\n\n        <label>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            className={css.input}\n          />\n        </label>\n\n        <label>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            className={css.input}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.button}>Register</button>\n      </form>\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginView_container__n8dcz\",\"input\":\"LoginView_input__SMhve\",\"button\":\"LoginView_button__W9SQu\"};"],"names":["RegisterView","dispatch","useDispatch","useState","redirectToContacts","setRedirectToContacts","name","setName","email","setEmail","password","setPassword","handleChange","target","value","to","replace","className","css","onSubmit","e","preventDefault","operations","autoComplete","type","onChange"],"sourceRoot":""}